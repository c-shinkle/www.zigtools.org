<extend template="base.shtml">
<title id="title" var="$page.title"></title>
<head id="head">
  <style>
    .tagline {
      font-size: 1rem;
      font-style: italic;
      margin: 4px 0px;
    }

    .vscode-banner {
      display: flex;
      flex-direction: column;
      width: fit-content;
      border: 0.3em solid;
      border-radius: 9999px;
      border-color: rgb(0, 120, 212);
      padding: 0px 2rem;
      margin-left: auto;
      margin-right: auto;
      text-align: center;
    }

    #form-result {
      padding-top: 1rem;
    }

    #form-result pre {
      font-size: larger;
    }

    #table-result {
      display: block;
      overflow: auto;
      white-space: nowrap;
    }

    .banner-note {
      border-left: 0.3em solid;
      padding: 0.1em 0 0.1em 1em;
      border-color: var(--banner-note-color);
    }

    .banner-warning {
      border-left: 0.3em solid;
      padding: 0.1em 0 0.1em 1em;
      border-color: var(--banner-warning-color);
    }

    .banner-important {
      border-left: 0.3em solid;
      padding: 0.1em 0 0.1em 1em;
      border-color: var(--banner-important-color);
    }
    
    details> :not(summary) {
      margin-left: 1.5rem;
    }

    summary {
      display: flex;
    }
    summary > * {
      flex-grow: 1;
    }
    summary::before {
      content: "\2212";
      font-size: 16px;
      margin-right: 0.5rem;
      align-self: center;
    }
    details[open] > summary::before {
      content: "+" !important;
    }

    form {
      display:flex;
      flex-direction: column;
      margin-left: 2rem;
      margin-right: 2rem;
      gap: 0.5rem;
    }

    form input {
      text-align: center;
      outline: none;
      background-color: transparent;
      border-width: 0;
      border-bottom-width: 2px;
      padding: 0.25rem;
      margin-top: 1rem;
      font-size: xx-large;

      color: #000;
      border-color: var(--zig-orange);
    }

    form button {
      flex: 1 1 0%;
      padding: 0.5rem;
      border: 1px solid;
      border-color: #666;
    }

    @media (prefers-color-scheme: dark) {
      form input {
        padding-bottom: 0.25rem;
        color: white;
      }
      form button {
        color: white;
        background-color: transparent;
      }
      form button:hover {
        background-color: rgb(255, 255, 255, 10%);
      }
    }
  </style>
  <script>
    const updateDetails = () => {
      if(window.location.hash) {
        let node = document.getElementById(window.location.hash.substring(1));
        while (node) {
          node = node.closest("details");
          if(!node) break;
          node.open = true;
          node = node.parentElement;
        }
      }
    }

    window.onload = updateDetails;
    window.onhashchange = () => {
      updateDetails();
      if (window.location.hash) {
        document.getElementById(window.location.hash.substring(1)).scrollIntoView();
      }
    };
  </script>
</head>
<header id="header">
  <h1 class="title" var="$page.title"></h1>
</header>
<main id="content">
  <div class="vscode-banner">
    <p>
      <strong>VS Code</strong>
      users only need the
      <a href="https://marketplace.visualstudio.com/items?itemName=ziglang.vscode-zig">official Zig Language extension</a>.
    </p>
    <p class="tagline">No need to manually install Zig or ZLS.</p>
  </div>
  <form>
    <input
    type="text"
    id="zig-version"
    name="zig_version"
    placeholder="What is your Zig Version?"
    pattern="(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d\*)"
    required
  >
    <div style="display: flex; gap: 0.5rem">
      <button id="button-from-source" class="install-button" type="submit" name="compatibility" value="full">
        Build From Source
      </button>
      <button id="button-binary" class="install-button" type="submit" name="compatibility" value="only-runtime">
        Prebuilt Binary
      </button>
    </div>
  </form>
  <div id="form-result" style="display: none;">
    <blockquote>
      <p>Files are signed with
        <a href="https://jedisct1.github.io/minisign/">minisign</a>
        using this public key:</p>
      <pre><code>RWR+9B91GBZ0zOjh6Lr17+zKf5BoSuFvrx2xSeDE57uIYvnKBGmMjOex</code></pre>
    </blockquote>
    <table id="form-table"></table>
  </div>
  <script>
    const params = new Proxy(new URLSearchParams(window.location.search), {
      get: (searchParams, name) => searchParams.get(name),
      set: (searchParams, name, value) => searchParams.set(name, value),
    });
    document.getElementById("zig-version").value = params["zig_version"];

    function formatBytes(bytes, decimals = 2) {
      if (!+bytes) return '0 Bytes'

      const k = 1024
      const dm = decimals < 0 ? 0 : decimals
      const sizes = ['Bytes', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']

      const i = Math.floor(Math.log(bytes) / Math.log(k))

      return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`
    }

    async function update() {
      let url = new URL(
        "https://releases.zigtools.org/v1/zls/select-version",
      );
      url.searchParams.set("zig_version", params["zig_version"]);
      url.searchParams.set("compatibility", params["compatibility"]);
      const response = await fetch(url);
      const json = await response.json();

      const fname = document.getElementById("zig-version");
      if ("error" in json) {
        fname.setCustomValidity(json.error);
        document.getElementById("form-result").style.display = "none";
        return;
      } else {
        fname.setCustomValidity("");
      }

      if (!("version" in json) || !("date" in json)) {
        alert("418 I'm a teapot");
        document.getElementById("form-result").style.display = "none";
        return;
      }

      const heading = document.createElement("tr");
      for (const item of ["OS", "Arch", "Filename", "Signature", "Size"]) {
        const th = document.createElement("th");
        th.innerHTML = item;
        heading.appendChild(th);
      }

      const thead = document.createElement("thead");
      thead.appendChild(heading);

      const tbody = document.createElement("tbody");

      for (const [key, value] of Object.entries(json)) {
        if (key === "version") continue;
        if (key === "date") continue;

        const target = key.split('-');

        const arch = document.createElement("td");
        arch.innerHTML = target[0];

        const os = document.createElement("td");
        os.innerHTML = target[1].charAt(0).toUpperCase() + target[1].slice(1);

        const index = value.tarball.lastIndexOf("/") + 1;
        const tarballLink = document.createElement("a");
        tarballLink.setAttribute("href", value.tarball);
        tarballLink.innerHTML = value.tarball.substring(index);

        const link = document.createElement("td");
        link.innerHTML = tarballLink.outerHTML;

        const signatureLink = document.createElement("a");
        signatureLink.setAttribute("target", "_blank");
        signatureLink.setAttribute("href", value.tarball + ".minisig");
        signatureLink.innerHTML = "minisig";

        const signature = document.createElement("td");
        signature.innerHTML = signatureLink.outerHTML;

        const size = document.createElement("td");
        size.setAttribute("title", "Base 1024");
        size.innerHTML = formatBytes(parseInt(value.size));

        const tr = document.createElement("tr");
        tr.appendChild(os);
        tr.appendChild(arch);
        tr.appendChild(link);
        tr.appendChild(signature);
        tr.appendChild(size);

        tbody.appendChild(tr);
      }

      const table = document.createElement("table");
      table.appendChild(thead);
      table.appendChild(tbody);

      document.getElementById("form-table").innerHTML = table.outerHTML;
      document.getElementById("form-result").style.display = ""; 
    };

    if (params["zig_version"] && params["compatibility"]) {
      update();
    }
  </script>
  <div id="page" var="$page.content"></div>
  <div style="padding-bottom: 100vh"></div>
</main>